{"version":3,"sources":["registerServiceWorker.js","TagBar.js","Msg.js","../../../aultfarms-lib/src/util/tagHelpers.js","CalfCard.js","HistoryDate.js","HistoryTag.js","HistoryGroup.js","HistoryTime.js","Prefs.js","History.js","HistorySelector.js","TagPane.js","Keypad.js","Colorbar.js","DateBar.js","RecordInput.js","App.js","../../../aultfarms-lib/src/trello/module/errors.js","../../../aultfarms-lib/src/trello/module/sequences.js","../../../aultfarms-lib/src/treatments/module/sequences.js","../../../aultfarms-lib/src/treatments/module/index.js","../../../aultfarms-lib/src/incoming/module/sequences.js","../../../aultfarms-lib/src/incoming/module/index.js","../../../aultfarms-lib/src/dead/module/sequences.js","../../../aultfarms-lib/src/dead/module/index.js","../../../aultfarms-lib/src/trello/module/index.js","../../../aultfarms-lib/src/windowSize/module/sequences.js","../../../aultfarms-lib/src/windowSize/module/index.js","../../../aultfarms-lib/src/trello/provider/index.js","../../../aultfarms-lib/src/windowSize/provider/index.js","module/sequences.js","module/index.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","connect","record","colors","msg","changeRecord","sequences","props","color","tag","className","style","borderColor","is_saved","value","type","onChange","evt","preventDefault","target","number","text","rangeContainsTag","r","start","end","group","find","tag_ranges","groups","asOfDate","arguments","length","undefined","groupname","g","allfound","filter","filteredToDate","date","isAfter","sorted","sortBy","tagStrToObj","str","groupmatches","trim","matches","tagObjToStr","t","dayshere","moment","diff","percdead","dead","head","groupclass","fontWeight","treatments","numeral","format","historySelector","deadRecords","incomingRecords","treatmentRecords","recordfordate","_","allgroups","calves","map","tags","tagHelpers","groupForTag","cloneDeep","mindate","reduce","curmin","d","isBefore","alltreatments","c","tr","tagInTreatmentRecord","calvesSorted","i","key","deadTagIndex","recordsfortag","reverse","prevdays","tagstr","alreadydeaddate","days","daystr","prevstr","treatment","sortBySequence","all_groups","day","width","onClick","sort","perc","name","slice","extendMoment","Moment","today","lastmonth","range","clone","subtract","lastthreemonths","lastyear","deadlastmonth","within","deadlastthreemonths","deadlastyear","totallastmonth","sum","totallastthreemonths","totallastyear","logout","href","version","ret","active","historySelectionChangeRequested","windowSize","errors","maxHeight","orientation","e","cardName","keyCode","this","onBackspace","onNumber","document","addEventListener","keypressed","bind","removeEventListener","n","onClear","arr","info","isObject","val","clicked","numberClicked","renderCalcRow","clearClicked","backspaceClicked","React","Component","keys","k","colorButtonClicked","backgroundColor","treatmentCodes","recordsValid","saveRecord","alreadydead","canSave","num","prefix","init","dir","flexDirection","_CerebralError","TrelloSaveError","apply","_CerebralError2","TrelloGetError","_CerebralError3","TrelloAuthorizeError","data","CARD_FIELDS","config","warnings","wForgottenReturn","_ref","trello","authorize","message","JSON","stringify","stack","initialized","boards","lists","loadList","_ref2","try","boardName","get","fields","b","closed","result","board","post","concat","id","labels","listName","l","list","_ref3","cards","keyBy","statePath","_ref4","store","set","reloadOneCard","_ref5","card","listname","idList","toLowerCase","putCard","_ref6","url","put","err","addLabelToCard","_ref7","idLabel","_templateObject8","saveTreatment","records","existing","push","join","datematches","rest","treatmentmatches","split","dateLastActivity","incoming","tagIndex","acc","each","fetchConfig","parse","desc","colorsCardToRecord","codesCardToRecord","parts","p","_p$trim$split","_p$trim$split2","propname","propval","replace","_$map","_$map2","computeStats","deadrecords","groupdeads","index","_templateObject13","_templateObject12","_templateObject11","_templateObject10","_templateObject9","tags_and_pens_str","note","tags_and_pens","tp","toUpperCase","toString","_$reduce","reloadOneRecord","recordIndex","findIndex","refreshedRecord","previous","newone","saveDead","add","alreadyDead","existingDate","authorized","resized","isSmall","height","TrelloClientLoadError","count","check","Trello","delay","resolve","reject","persist","scope","read","write","expiration","success","deauthorize","path","params","_dimensions","innerWidth","innerHeight","seq","_M","dimensions","windowResized","context","sequencepath","updateMsg","sequence","historyGroupSortClicked","sg","parallel","treatmentEditorActive","historyGroup","modules","treatmentsModule","incomingModule","deadModule","trelloModule","windowSizeModule","providers","trelloProvider","windowSizeProvider","trelloErrors","CerebralApp","AppModule","devtools","ReactDOM","render","app","getElementById","URL","process","origin","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6ccb169c.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport {connect} from '@cerebral/react';\nimport {state,sequences} from 'cerebral/tags';\n\nimport './TagBar.css';\n\nexport default connect({\n  record: state`record`,\n  colors: state`treatments.colors`,\n     msg: state`msg`,\n  changeRecord: sequences`changeRecord`,\n}, function TagBar(props) {\n  const colorTextChanged = evt => {\n    evt.preventDefault();\n    props.changeRecord({tag: { color: evt.target.value} });\n  };\n\n  const tagNumberTextChanged = evt => {\n    evt.preventDefault();\n    props.changeRecord({tag: { number: +(evt.target.value)} });\n  };\n\n  const color = props.colors[props.record.tag.color];\n  return (\n    <div className=\"tagbar\"\n         style={{ borderColor: props.record.is_saved ? '#CCCCCC' : 'red' }}>\n      <input className=\"colortext\"\n             style={{ color: color, borderColor: color }}\n             value={props.record.tag.color}\n             type=\"text\"\n             onChange={colorTextChanged} />\n      <input className=\"numbertext\"\n             value={props.record.tag.number || ''} \n             type=\"text\" \n             onChange={tagNumberTextChanged} />\n    </div>\n  );\n\n});\n\n","import React from  'react';\nimport {connect} from '@cerebral/react';\nimport {state} from 'cerebral/tags';\n\nimport './Msg.css';\n\nexport default connect({\n  msg: state`msg`,\n}, function Msg(props) {\n  return (\n    <div className={'msg msg' + props.msg.type}>\n      {props.msg.text}\n    </div>\n   );\n});\n","import _ from 'lodash';\nimport moment from 'moment'; // Note that a tag range is pre-processed to ensure that it\n// only has tags of the same color.  If there is a color\n// split on a group, the group will have 2 separate ranges.\n\nexport var rangeContainsTag = function rangeContainsTag(r, tag) {\n  return tag.color === r.start.color && tag.number >= r.start.number && tag.number <= r.end.number;\n};\nexport var groupContainsTag = function groupContainsTag(group, tag) {\n  //console.log('checking tag ',tag,' against group ranges ', group);\n  return _.find(group.tag_ranges, function (r) {\n    return rangeContainsTag(r, tag);\n  });\n}; // groupForTag has to deal with historic repeated tag color/number\n// combinations.  i.e. 3 years ago another \"RED13\" may have existed.\n// We need to figure out which one of these is the \"correct\" one.\n// This can be slightly fuzzy, because one or two mistakes is not\n// going to break the bank.\n//\n// The simplest algorithm is one that assumes there is only one\n// of each combo on-site at any given time.  Therefore, when a \n// new group comes in and gets tagged, they supercede any previous\n// version of that tag.  So the \"latest\" copy of the tag is always\n// the \"correct\" one for \"today\".\n//\n// Unfortunately, sometimes our scripts may want to compute historic death\n// loss and things like that.  \"historic\" means sometimes we're looking in \n// a date range that is not \"today\".  Therefore, we have to uglify this \n// function definition by adding a third optional parameter of \"asOfDate\"\n// which is the ballpark date of interest: i.e. it will take the tag number\n// as of that day.\n\nexport var groupForTag = function groupForTag(groups, tag) {\n  var asOfDate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  // If the tag already has a \"groupname\" key, just return that:\n  if (tag && tag.groupname) return _.find(groups, function (g) {\n    return g.groupname === tag.groupname;\n  });\n\n  var allfound = _.filter(groups, function (g) {\n    return groupContainsTag(g, tag);\n  }); // if none, return false:\n\n\n  if (!allfound || allfound.length < 1) return false;\n  if (!asOfDate) asOfDate = moment(); // default to today\n  else asOfDate = moment(asOfDate, 'YYYY-MM-DD');\n\n  var filteredToDate = _.filter(allfound, function (g) {\n    return !moment(g.date, 'YYYY-MM-DD').isAfter(asOfDate);\n  }); // !isAfter = equal or before\n\n\n  if (!filteredToDate) {\n    console.log('WARNING: groupForTag: found multiple possible groups, but after filtering for date there were none left!');\n    return false;\n  }\n\n  var sorted = _.sortBy(filteredToDate, function (g) {\n    return g.date;\n  }); // default lexical sorting will put oldest on top, newest on bottom.  \n  // Need to take the newest one that is prior to the reference date\n\n\n  return sorted[sorted.length - 1];\n};\nexport var tagStrToObj = function tagStrToObj(str) {\n  str = str.trim(); // First, check if it is group-prefixed tag:\n\n  var groupmatches = str.match(/^([A-Z]+:[A-Z]{3}[0-9]{2}-[0-9A-Z]):([A-Za-z]+) *([0-9]+)$/);\n\n  if (groupmatches) {\n    return {\n      groupname: groupmatches[1],\n      color: groupmatches[2],\n      number: +(groupmatches[3] || 1)\n    };\n  } // Otherwise, it is just a color/number combo:\n\n\n  var matches = str.match(/^([A-Za-z]+) ?([0-9]+)?$/);\n  if (!matches) return {\n    color: 'NOTAG',\n    number: 1\n  };\n  return {\n    color: matches[1],\n    number: +matches[2] || 1\n  };\n};\nexport var tagObjToStr = function tagObjToStr(t) {\n  if (!t) return '';\n  var str = '';\n  if (t.groupname) str += t.groupname + ':'; // group:colornumber\n\n  str += t.color || '';\n  str += t.number || '';\n  return str;\n};","import React from 'react';\nimport {connect} from '@cerebral/react';\nimport {state} from 'cerebral/tags';\nimport numeral from 'numeral';\nimport moment from 'moment';\n\nimport './CalfCard.css';\n\n// GREEN946: \n//   7 treatments, here 109 days.\n// Group: BKTKY:MAY19-1: \n//   12 (29%) dead \n//   29% 1+ treatments,\n//   12% 2+ treatments\n//    9% 3+ treatments,\nexport default connect({\n  colors: state`treatments.colors`,\n}, function CalfCard(props) { \n  const r = props.record;\n  /*\n  r = {\n    tag: { color: \"BLUE\", number: 193 },\n    treatments: [\n      { date: \"2019-07-22\", treatment: \"ExDrHt\" },\n      { date: \"2019-08-22\", treatment: \"PByHt\" },\n    ],\n    group: {\n      name: 'BKTKY:MAY19-1',\n      date: '2019-09-11',\n      head: 260,\n      dead: [\n        { date: '2019-08-17', tag: { color: 'BLUE', number: 7 } },\n      ],\n    },\n  };\n  */\n\n  let color='black';\n  if (r.tag && r.tag.color && props.colors[r.tag.color]) {\n    color = props.colors[r.tag.color];\n  }\n  const dayshere = moment().diff(moment(r.group.date), 'days');\n  const percdead = (r.group.dead ? r.group.dead.length : 0) / (+r.group.head) * 100.0;\n\n  let groupclass = 'calfcardgoodgroup';\n  if (percdead >= 10.0) groupclass = 'calfcardmoderategroup';\n  if (percdead >= 20.0) groupclass = 'calfcardbadgroup';\n  return (\n    <div className=\"calfcard\">\n      <div className=\"calfcardheader\">\n        <span className=\"calfcardcolortext\" style={{fontWeight:'bold', color }}>{r.tag.color}{r.tag.number}:&nbsp;</span>\n        {r.treatments ? r.treatments.length : '0'} treatments,&nbsp;\n        {dayshere} day{dayshere > 1 || dayshere < 1 ? 's' : ''} onsite.\n      </div>\n\n      <div className={\"calfcardgroupinfo \"+groupclass}>\n        {r.group.groupname}: &nbsp;\n        {r.group.dead ? r.group.dead.length : '0'} head \n        ({numeral(percdead).format('0.00')}%) dead\n      </div>\n\n    </div>\n  );\n});\n\n","import React from 'react';\nimport _ from 'lodash';\nimport moment from 'moment';\n\nimport {connect} from '@cerebral/react';\nimport {state} from 'cerebral/tags';\n\nimport {tagHelpers} from 'aultfarms-lib/util';\n\nimport CalfCard from './CalfCard';\n\nexport default connect({\n    historySelector: state`historySelector`,\n        deadRecords: state`dead.records`,\n    incomingRecords: state`incoming.records`,\n   treatmentRecords: state`treatments.records`,\n            record: state`record`,\n}, function HistoryDate(props) {\n  // Show cards for current date:\n  let recordfordate = _.find(props.deadRecords, r=>(r.date === props.record.date));\n  if (!recordfordate) recordfordate = props.record;\n\n  // Compute the initial list of records, with the proper group for each tag:\n  const allgroups = {};\n  let calves = _.map(recordfordate.tags, t => {\n    // group needs list of groups, tag, and an \"as-of\" date\n    const group = tagHelpers.groupForTag(props.incomingRecords, t, recordfordate.date);\n    allgroups[group.groupname] = _.cloneDeep(group);\n    return {\n      tag: t,\n      treatments: [],\n      group: _.cloneDeep(group),\n    };\n  });\n\n  // Now, use the \"all groups\" to do a pre-sort on the treatments list\n  // This points out that I have no good way to determine the \"end\" date of a tag...\n  const mindate = _.reduce(allgroups, (curmin,g) => {\n    const d = moment(g.date,'YYYY-MM-DD');\n    if (d.isBefore(curmin)) return d;\n    return curmin;\n  }, moment());\n  const alltreatments = _.filter(props.treatmentRecords, t => moment(t.date).isAfter(mindate));\n  // Loop over each dead calf and find treatments it received:\n  calves = _.map(calves, c => {\n    // A treatment record has an array of tags for a given date/treatment:\n    c.treatments = _.filter(alltreatments, tr => {\n      const tagInTreatmentRecord = _.find(tr.tags, \n        t => (t.number === c.tag.number && t.color === c.tag.color)\n      );\n      // If tag from dead record is not in this treatment record, discard treatment:\n      if (!tagInTreatmentRecord) return false;\n      // If tag matches, but is from a different group, discard treatment:\n      const g = tagHelpers.groupForTag(props.incomingRecords, tagInTreatmentRecord, tr.date);\n      if (g.groupname !== c.group.groupname) return false; // not same group\n      return true; // keep this treatment, it goes with this calf\n    });\n    return c;\n  });\n\n  const calvesSorted = _.sortBy(calves, c => c.group.date);\n\n  return (\n    <div className=\"history\">\n      <div className=\"historytitle\">\n        {recordfordate.date+': '+(recordfordate && recordfordate.tags ? recordfordate.tags.length : '0')} DEAD total.\n      </div>\n      {_.map(calvesSorted, (c,i) => {\n        // group needs list of groups, tag, and an \"as-of\" date\n        return <CalfCard key={'calfcard'+i} record={c} />\n      })}\n    </div>\n  );\n});\n\n","import React from 'react';\nimport _ from 'lodash';\nimport moment from 'moment';\n\nimport {connect} from '@cerebral/react';\nimport {state} from 'cerebral/tags';\nimport {tagHelpers} from 'aultfarms-lib/util';\n\nexport default connect({\n   historySelector: state`historySelector`,\n  treatmentRecords: state`treatments.records`,\n   incomingRecords: state`incoming.records`,\n      deadTagIndex: state`dead.tagIndex`,\n            record: state`record`,\n}, function HistoryTag(props) {\n  const record = props.record;\n  // tag needs to be valid before we do anything:\n  if (!record.tag || !record.tag.color || !record.tag.number) return '';\n  // find all records with this tag in it:\n  const group = tagHelpers.groupForTag(props.incomingRecords, record.tag, record.date);\n  let recordsfortag = _.filter(props.treatmentRecords, r => _.find(r.tags, t => {\n      if (!(t.number===record.tag.number && t.color===record.tag.color)) return false;\n      const g = tagHelpers.groupForTag(props.incomingRecords, t, r.date);\n      if (!g || !group || g.groupname !== group.groupname) return false;\n      return true;\n  }));\n\n  recordsfortag = _.reverse(_.sortBy(recordsfortag,r=>r.date));\n  let prevdays = -1; // keeps track of previous days in mapper\n  const tagstr = tagHelpers.tagObjToStr(record.tag);\n  // The dead.tagIndex looks like: { tagstr: { groupname: 'date' } }\n  let alreadydeaddate = false;\n  if (record.group.groupname && props.deadTagIndex[tagstr]) {\n    alreadydeaddate = props.deadTagIndex[tagstr][record.group.groupname];\n  }\n  return (\n    <div className=\"historytag\">\n      <div className=\"historyheader\">\n         {recordsfortag.length} Treatments\n         {record.group?', '+record.group.groupname:''}\n      </div>\n      {(alreadydeaddate ? <div className=\"historyerror\">Already died on {alreadydeaddate}!</div> : '')}\n      {_.map(recordsfortag, (r,i) => {\n        const days = moment().diff(moment(r.date,'YYYY-MM-DD'), 'days');\n        let daystr = days + ' days ago';\n        if (days === 0) daystr = 'today';\n        if (days === 1) daystr = 'yesterday';\n        let prevstr = '(+'+(days-prevdays)+')';\n        if (prevdays < 0) prevstr = '';\n        prevdays = days;\n        return (\n        <div className=\"historytagentry\" key={'historyline'+i}>\n          <div className=\"historytreatment\">\n            {r.treatment}\n          </div>\n          <div className=\"historyduration\">\n            { daystr } { prevstr }\n          </div>\n        </div>\n      )})}\n    </div>\n  );\n});\n\n","import React from 'react';\nimport _ from 'lodash';\nimport numeral from 'numeral';\nimport moment from 'moment';\n\nimport {connect} from '@cerebral/react';\nimport {state,sequences} from 'cerebral/tags';\n\nimport {groupForTag} from 'aultfarms-lib/util/tagHelpers';\n\nimport './HistoryGroup.css';\n\nexport default connect({\n  historySelector: state`historySelector`,\n           groups: state`incoming.records`,\n       treatments: state`treatments.records`,\n           record: state`record`,\n           sortBy: state`historyGroup.sort`,\n  sortBySequence: sequences`historyGroupSortClicked`,\n}, function HistoryGroup(props) {\n  let all_groups = props.groups;\n  const group = groupForTag(props.groups, props.record.tag);\n  if (group) all_groups = [ group ]; // just show group for current tag\n  all_groups = _.sortBy(all_groups, g => {\n    if (props.sortBy === 'date') return g.day; // day string is lexicographic for sorting\n    if (props.sortBy === 'name') return g.groupname;\n    if (props.sortBy === 'dead') return g.dead;\n    if (props.sortBy === 'perc') return (g.dead ? g.dead.length : 0) / (g.head ? g.head : 1);\n    return g.day; // default\n  });\n  all_groups = _.reverse(all_groups); // other way seems better\n  return (\n    <div className=\"historygroup\">\n      { group ? ' Showing group for current tag: '+props.record.tag.color+props.record.tag.number : '' }\n      <table width=\"100%\">\n      <tbody>\n        <tr>\n          <th onClick={() => props.sortBySequence({ sort: 'name'})}>Name</th>\n          <th onClick={() => props.sortBySequence({ sort: 'date'})}>Date</th>\n          <th onClick={() => props.sortBySequence({ sort: 'dead'})}>Dead</th>\n          <th onClick={() => props.sortBySequence({ sort: 'perc'})}>%</th>\n        </tr>\n      { \n        _.map(all_groups, (g,i) => {\n          let perc = 0;\n          if (g.dead && g.head) perc = g.dead.length / g.head;\n          let name = g.groupname;\n          if (name.length > 15) name = name.slice(0,6)+'...'+name.slice(-6);\n          return (\n            <tr className={ perc < .05 ? 'historygroupgood' : perc < 0.1 ? 'historygroupmeh' : 'historygroupbad' } key={'historygrouprow'+i}>\n              <td className=\"historygroupname\"><span name=\"historygroupnamepill\">{ name }</span></td>\n              <td className=\"historygroupdate\"> { moment(g.date,'YYYY-MM-DD').format('M/DD/YY') }</td>\n              <td className=\"historygroupdead\">{ g.dead ? g.dead.length : 0 }</td>\n              <td className=\"historygroupperc\">{ perc > 0 ? '('+numeral(perc).format('0.00%')+')' : '' }</td>\n            </tr>\n          );\n        })\n      }\n      </tbody>\n      </table>\n    </div>\n  );\n});\n\n","import React from 'react';\nimport _ from 'lodash';\nimport numeral from 'numeral';\nimport { extendMoment } from 'moment-range';\nimport Moment from 'moment';\n\nimport {connect} from '@cerebral/react';\nimport {state} from 'cerebral/tags';\n\nconst moment = extendMoment(Moment);\n\nexport default connect({\n  historySelector: state`historySelector`,\n      deadRecords: state`dead.records`,\n           record: state`record`,\n}, function HistoryTime(props) {\n\n  const today = moment();\n  const lastmonth = moment.range(today.clone().subtract(1,'months'),today);\n  const lastthreemonths = moment.range(today.clone().subtract(3,'months'),today);\n  const lastyear = moment.range(today.clone().subtract(1,'years'),today);\n\n  const deadlastmonth       = _.filter(props.deadRecords, r => moment(r.date,'YYYY-MM-DD').within(lastmonth));\n  const deadlastthreemonths = _.filter(props.deadRecords, r => moment(r.date,'YYYY-MM-DD').within(lastthreemonths));\n  const deadlastyear        = _.filter(props.deadRecords, r => moment(r.date,'YYYY-MM-DD').within(lastyear));\n\n  const totallastmonth       = _.reduce(deadlastmonth,       (sum,r) => sum+r.tags.length, 0);\n  const totallastthreemonths = _.reduce(deadlastthreemonths, (sum,r) => sum+r.tags.length, 0);\n  const totallastyear        = _.reduce(deadlastyear,        (sum,r) => sum+r.tags.length, 0);\n  return (\n    <div className=\"historydead\">\n      <div className=\"historydeadentry\">\n        Past month: {totallastmonth} dead ({numeral(totallastmonth/lastmonth.diff('days')).format('0.00')}/day)\n      </div>\n      <div className=\"historydeadentry\">\n        Past 3 months: {totallastthreemonths} dead ({numeral(totallastthreemonths/lastthreemonths.diff('days')).format('0.00')}/day)\n      </div>\n      <div className=\"historydeadentry\">\n        Past year: {totallastyear} dead ({numeral(totallastyear/lastyear.diff('days')).format('0.00')}/day)\n      </div>\n    </div>\n  );\n});\n\n","import React from 'react';\nimport { connect } from '@cerebral/react';\nimport { sequences } from 'cerebral/tags';\n\nimport './Prefs.css';\n\nimport {version} from '../package.json';\n\nexport default connect({\n  logout: sequences`logout`,\n}, function Prefs(props) {\n\n  const logoutClicked = evt => {\n    props.logout();\n    evt.preventDefault();\n  }\n\n  return (\n    <div className=\"prefs\">\n      <p className=\"prefslink\" href=\"#\" onClick={logoutClicked}>Change Trello Account</p>\n      <p className=\"prefsinfo\">Dead App Version {version}</p>\n    </div>\n  );\n});\n\n","import React from 'react';\n\nimport {connect} from '@cerebral/react';\nimport {state} from 'cerebral/tags';\n\nimport  HistoryDate from './HistoryDate';\nimport   HistoryTag from './HistoryTag';\nimport HistoryGroup from './HistoryGroup';\nimport  HistoryTime from './HistoryTime';\nimport        Prefs from './Prefs';\n\nimport './History.css';\n\nexport default connect({\n   historySelector: state`historySelector`,\n}, function History(props) {\n  let ret = (<div className='history'>Unknown History Type</div>);\n  switch(props.historySelector.active) {\n    case  'date': ret = <HistoryDate />;  break;\n    case   'tag': ret = <HistoryTag />;   break;\n    case 'group': ret = <HistoryGroup />; break;\n    case  'time': ret = <HistoryTime />;  break;\n    case 'prefs': ret = <Prefs />;  break;\n    default:\n  }\n  return ret;\n});\n\n","import React from 'react';\nimport FontAwesome from 'react-fontawesome';\n\nimport {connect} from '@cerebral/react';\nimport {state,sequences} from 'cerebral/tags';\n\nimport './HistorySelector.css';\n\nexport default connect({\n  historySelector: state`historySelector`,\n  historySelectionChangeRequested: sequences`historySelectionChangeRequested`,\n}, function HistorySelector(props) {\n  const prefsClicked = evt => props.historySelectionChangeRequested({ active: 'prefs' });\n  const  dateClicked = evt => props.historySelectionChangeRequested({ active: 'date' });\n  const   tagClicked = evt => props.historySelectionChangeRequested({ active: 'tag' });\n  const groupClicked = evt => props.historySelectionChangeRequested({ active: 'group' });\n  const  timeClicked = evt => props.historySelectionChangeRequested({ active: 'time' });\n\n  return (\n    <div className=\"historyselector\">\n      <div className={'historyselectorbutton ' + (props.historySelector.active === 'prefs' ? 'historyselectorbuttonactive' : '')}\n           onClick={prefsClicked}>\n        <FontAwesome name='bars' />\n      </div>\n      <div className={'historyselectorbutton ' + (props.historySelector.active === 'date' ? 'historyselectorbuttonactive' : '')}\n           onClick={dateClicked}>\n        Date\n      </div>\n      <div className={'historyselectorbutton ' + (props.historySelector.active === 'tag' ? 'historyselectorbuttonactive' : '')}\n           onClick={tagClicked}>\n        Tag\n      </div>\n      <div className={'historyselectorbutton ' + (props.historySelector.active === 'group' ? 'historyselectorbuttonactive' : '')}\n           onClick={groupClicked}>\n        Group\n      </div>\n      <div className={'historyselectorbutton ' + (props.historySelector.active === 'time' ? 'historyselectorbuttonactive' : '')}\n           onClick={timeClicked}>\n        Time\n      </div>\n\n    </div>\n  );\n\n});\n\n","import React from 'react';\nimport _ from 'lodash';\n\nimport {connect} from '@cerebral/react';\nimport {state} from 'cerebral/tags';\n\nimport TagBar from './TagBar';\nimport Msg from './Msg';\nimport History from './History';\nimport HistorySelector from './HistorySelector';\n\nimport './TagPane.css';\n\nexport default connect({\n  windowSize: state`windowSize`,\n  errors: state`dead.errors`,\n}, function TagPane(props) {\n  return (\n    <div className='tagpane' style={{ maxHeight: (props.windowSize.orientation === 'landscape' ? \"98vh\" : \"49vh\") }}>\n      <TagBar />\n      <Msg />\n      {(!props.errors || props.errors.length < 1) ? '' : \n        <div className='tagpane-errors'>\n          {_.map(props.errors, e => \n            <div className='tagpane-error'>\n              Error on card: {e.cardName}<br/>\n              Error was: <pre>{e.error}</pre>\n            </div>\n          )}\n        </div>\n      }\n      <HistorySelector />\n      <History />\n    </div>\n   );\n});\n","import React from 'react';\nimport _ from 'lodash';\n\nimport {connect} from '@cerebral/react';\n\nimport './Keypad.css';\n\nexport default connect({\n}, class Keypad extends React.Component {\n\n  keypressed(evt) {\n    if (evt.keyCode === 8) {\n      this.props.onBackspace(); // backspace\n      evt.preventDefault();\n    }\n    const number = evt.keyCode - 48; // 0 is key 48\n    if (number >= 0 && number <=9) {\n      this.props.onNumber(number);\n      evt.preventDefault();\n    }\n  }\n  componentDidMount() {\n    document.addEventListener('keypress', this.keypressed.bind(this));\n  }\n  componentWillUnmount() {\n    document.removeEventListener('keypress', this.keypressed.bind(this));\n  }\n\n  numberClicked(n) {\n    return (evt) => {\n      evt.preventDefault();\n      this.props.onNumber(n);\n    }\n  }\n\n  clearClicked(evt) {\n    evt.preventDefault();\n    this.props.onClear();\n  }\n\n  backspaceClicked(evt) {\n    evt.preventDefault();\n    this.props.onBackspace();\n  }\n\n  renderCalcRow(arr) {\n    return (\n      <div className=\"keypadrow\"> \n        {\n          arr.map(info => \n              <div className=\"keypadbutton\"\n                   key={'calcwrap'+(_.isObject(info) ? info.val : info)}\n                   onClick={_.isObject(info) ? info.clicked : this.numberClicked(info).bind(this) }>\n                {_.isObject(info) ? info.val : info}\n              </div>\n          )\n        }\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"keypad\">\n        {this.renderCalcRow([1,2,3])}\n        {this.renderCalcRow([4,5,6])}\n        {this.renderCalcRow([7,8,9])}\n        { \n          this.renderCalcRow([\n            { val: 'C', clicked: this.clearClicked.bind(this) },\n            0,\n            { val: '<--', clicked: this.backspaceClicked.bind(this) },\n          ])\n        }\n      </div>\n    );\n  }\n});\n\n\n","import React from 'react';\nimport _ from 'lodash';\n\nimport {connect} from '@cerebral/react';\nimport {state,sequences} from 'cerebral/tags';\n\nimport './Colorbar.css';\n\nexport default connect({\n  record: state`record`,\n  colors: state`treatments.colors`,\n  changeRecord: sequences`changeRecord`,\n}, class Colorbar extends React.Component {\n\n  keypressed(evt) {\n    let color = '';\n    switch(evt.key) {\n      case 'y': color = 'YELLOW'; break;\n      case 'g': color = 'GREEN'; break;\n      case 'b': color = 'BLUE'; break;\n      case 'r': color = 'RED'; break;\n      case 'p': color = 'PURPLE'; break;\n      case 'w': color = 'WHITE'; break;\n      case 'n': color = 'NOTAG'; break;\n      default: return;\n    }\n    evt.preventDefault();\n    this.props.changeRecord({tag: { color: color } });\n  }\n  componentDidMount() {\n    document.addEventListener('keypress', this.keypressed.bind(this));\n  }\n  componentWillUnmount() {\n    document.removeEventListener('keypress', this.keypressed.bind(this));\n  }\n\n  colorButtonClicked(color) { \n    const props = this.props;\n    return evt => {\n      evt.preventDefault();\n      props.changeRecord({tag: { color: color } });\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"colorbar\">\n        {_.keys(this.props.colors).map((c,k) => \n            <div key={'color'+c} \n                 className=\"colorbutton\"\n                 onClick={this.colorButtonClicked(c)} \n                 style={{backgroundColor: this.props.colors[c] }}>\n            </div>\n         )}\n         <div key={'colorNOTAG'}\n              className=\"colorbutton\"\n              onClick={this.colorButtonClicked('NOTAG')}\n              style={{backgroundColor: '#CCCCCC'}}>\n          N\n        </div>\n      </div>\n    );\n  }\n\n});\n\n","import React from 'react';\n\nimport {connect} from '@cerebral/react';\nimport {state,sequences} from 'cerebral/tags';\n\nimport './DateBar.css';\n\nexport default connect({\n  record: state`record`,\n  changeRecord: sequences`changeRecord`,\n}, function DateBar(props) {\n\n  const dateChanged = evt => {\n    evt.preventDefault();\n    props.changeRecord({date: evt.target.value});\n  };\n\n   return (\n    <div className=\"datebar\">\n      <input className='dateinput'\n             value={props.record.date}\n             type=\"date\"\n             onChange={dateChanged} />\n    </div>\n  );\n});\n","import React from 'react';\n\nimport {connect} from '@cerebral/react';\nimport {state,sequences} from 'cerebral/tags';\n\nimport {tagHelpers} from 'aultfarms-lib/util';\n\nimport Keypad from './Keypad.js';\nimport Colorbar from './Colorbar.js';\nimport DateBar from './DateBar.js';\n\nimport './RecordInput.css';\n\nexport default connect({\n          record: state`record`,\n          colors: state`colors`,\n  treatmentCodes: state`treatments.treatmentCodes`,\n    recordsValid: state`recordsValid`,\n    deadTagIndex: state`dead.tagIndex`,\n       changeRecord: sequences`changeRecord`,\n         saveRecord: sequences`saveRecord`,\n}, function RecordInput(props) {\n  const record = props.record;\n\n  const numberClicked = num => {\n    const prefix = '' + (props.record.tag.number || ''); // convert to string\n    props.changeRecord({tag: { number: prefix+num} });\n  };\n\n  const clearClicked = () => {\n    props.changeRecord({ tag: { number: '', color: '' } });\n  };\n\n  const backspaceClicked = () => {\n    let str = ''+props.record.tag.number;\n    if (str.length > 0) str = str.slice(0,-1);\n    props.changeRecord({ tag: { number: +(str) } });\n  };\n\n  const tagstr = tagHelpers.tagObjToStr(props.record.tag);\n  const alreadydead = record.group && props.deadTagIndex && props.deadTagIndex[tagstr] && props.deadTagIndex[tagstr][record.group.groupname];\n  const canSave = () => (props.recordsValid && props.record.tag && props.record.tag.number && props.record.tag.color && !alreadydead);\n  const recordSaveClicked = evt => {\n    if (canSave()) {\n      evt.preventDefault();\n      props.saveRecord();\n    }\n  };\n\n  return (\n    <div className=\"recordinput\">\n\n      <Colorbar />\n\n      <DateBar />\n\n      <Keypad onNumber={numberClicked}\n              onClear={clearClicked}\n              onBackspace={backspaceClicked} />\n\n      <div className={'savebutton ' + (canSave() ? 'savebuttonenabled':'savebuttondisabled')}\n           onClick={recordSaveClicked}>\n        SAVE DEAD \n      </div>\n\n    </div>\n  );\n});\n","import React from 'react';\nimport {connect} from '@cerebral/react';\nimport {state,sequences} from 'cerebral/tags';\n\nimport TagPane from './TagPane';\nimport RecordInput from './RecordInput';\n\nimport './App.css';\n\nexport default connect({\n  windowSize: state`windowSize`,\n  init: sequences`init`,\n}, class App extends React.Component {\n\n  componentDidMount() {\n    this.props.init();\n  }\n\n  render() {\n    const dir = this.props.windowSize.orientation === 'landscape' ? 'row' : 'column';\n\n    return (\n      <div className=\"App\" style={{ flexDirection: dir }}>\n        <TagPane />\n        <RecordInput />\n      </div>\n    );\n  }\n\n});\n","import _classCallCheck from \"/Users/aultac/repos/aultfarms/dead/apps/dead/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/aultac/repos/aultfarms/dead/apps/dead/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aultac/repos/aultfarms/dead/apps/dead/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/aultac/repos/aultfarms/dead/apps/dead/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { CerebralError } from 'cerebral';\nexport var TrelloSaveError =\n/*#__PURE__*/\nfunction (_CerebralError) {\n  _inherits(TrelloSaveError, _CerebralError);\n\n  function TrelloSaveError() {\n    _classCallCheck(this, TrelloSaveError);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TrelloSaveError).apply(this, arguments));\n  }\n\n  return TrelloSaveError;\n}(CerebralError);\n;\nexport var TrelloGetError =\n/*#__PURE__*/\nfunction (_CerebralError2) {\n  _inherits(TrelloGetError, _CerebralError2);\n\n  function TrelloGetError() {\n    _classCallCheck(this, TrelloGetError);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TrelloGetError).apply(this, arguments));\n  }\n\n  return TrelloGetError;\n}(CerebralError);\n;\nexport var TrelloAuthorizeError =\n/*#__PURE__*/\nfunction (_CerebralError3) {\n  _inherits(TrelloAuthorizeError, _CerebralError3);\n\n  function TrelloAuthorizeError() {\n    _classCallCheck(this, TrelloAuthorizeError);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TrelloAuthorizeError).apply(this, arguments));\n  }\n\n  return TrelloAuthorizeError;\n}(CerebralError);\n;","import _taggedTemplateLiteral from \"/Users/aultac/repos/aultfarms/dead/apps/dead/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"trello.lists\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"trello.lists.\", \"\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"trello.authorized\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"trello.authorized\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport _ from 'lodash';\nimport { state, sequence, CerebralError } from 'cerebral';\nimport { set } from 'cerebral/factories';\nimport Promise from 'bluebird';\nimport * as errors from './errors';\nvar CARD_FIELDS = 'name,id,closed,desc,dateLastActivity,labels,idList'; // For some reason cerebral seems to trigger these dumb warnings\n\nPromise.config({\n  // Enables all warnings except forgotten return statements.\n  warnings: {\n    wForgottenReturn: false\n  }\n}); //-----------------------------------------------\n// authorize and deauthorize\n\nexport var authorize = [function (_ref) {\n  var trello = _ref.trello;\n  return trello.authorize().catch(function (e) {\n    e.message = 'Failed to authorize trello: ' + e.message + JSON.stringify(e.stack);\n    throw new errors.TrelloAuthorizeError(e);\n  });\n}, set(state(_templateObject()), true)];\nexport var deauthorize = [set(state(_templateObject2()), false), sequence('deauthorize->authorize', authorize)]; //-----------------------------------------------------------\n// loadList sequence: given a board and list name in props, \n// load it into the state from Trello\n// props = { boardName, listName, key } the list's data will be put at trello.lists.<key>\n// We will keep a promise for each board/list that we need to verify exists\n// in order to prevent simulataneous accesses from creating duplicate boards/lists\n// when they see that a board doesn't exist yet.\n\nvar initialized = {\n  boards: {},\n  lists: {}\n};\nexport var loadList = sequence('trello.loadList', [function (_ref2) {\n  var props = _ref2.props,\n      trello = _ref2.trello;\n  var ret = {}; // First get the board\n\n  return Promise.try(function () {\n    if (initialized.boards[props.boardName]) return initialized.boards[props.boardName]; // if this is a promise, then someone else is initializing or it's done already\n    // Start by getting board, create if doesn't exist, save promise in \"initialized\":\n\n    return initialized.boards[props.boardName] = trello.get('members/me/boards', {\n      fields: 'name,id,closed'\n    }).filter(function (b) {\n      return b && !b.closed;\n    }).then(function (result) {\n      var board = _.find(result, function (b) {\n        return b.name === props.boardName;\n      });\n\n      if (board) return board;\n      console.log('Could not find board ' + props.boardName + ', creating it.');\n      return trello.post('boards', {\n        name: props.boardName\n      }); // the result of this call is the board object itself\n    });\n  }).then(function (board) {\n    ret.board = board;\n  }) // Then get the labels:\n  .then(function () {\n    return trello.get(\"boards/\".concat(ret.board.id, \"/labels\"), {\n      fields: 'id,name,color'\n    });\n  }).then(function (labels) {\n    ret.labels = labels;\n  }) // Then get the list info:\n  .then(function () {\n    if (initialized.lists[props.listName]) return initialized.lists[props.listName];\n    return initialized.lists[props.listName] = trello.get(\"boards/\".concat(ret.board.id, \"/lists\"), {\n      fields: 'name,id,closed,cards'\n    }).filter(function (l) {\n      return l && !l.closed;\n    }).then(function (result) {\n      var list = _.find(result, function (l) {\n        return l.name === props.listName;\n      });\n\n      if (list) return list;\n      console.log('Could not find list ' + props.listName + ', creating it.');\n      return trello.post(\"boards/\".concat(ret.board.id, \"/lists\"), {\n        name: props.listName\n      }); // resolves to the list object itself\n    });\n  }).then(function (list) {\n    ret.list = list;\n  }) // Now setup the final return statement and catch:\n  .then(function () {\n    return ret;\n  }).catch(function (error) {\n    error.message = 'Failed to get list ' + props.listName + ': ' + error.message;\n    throw new errors.TrelloGetError(error);\n  });\n}, // Now get the cards for this list:\nfunction (_ref3) {\n  var props = _ref3.props,\n      trello = _ref3.trello;\n  return trello.get('lists/' + props.list.id + '/cards', {\n    fields: CARD_FIELDS\n  }).filter(function (c) {\n    return c && !c.closed;\n  }) // Save the state path for this card inside the card itself so we can easily update later\n  .then(function (cards) {\n    return _.keyBy(_.map(cards, function (c) {\n      c.statePath = \"trello.lists.\".concat(props.key, \".\").concat(c.id);\n      return c;\n    }), function (c) {\n      return c.id;\n    });\n  }).then(function (result) {\n    return {\n      cards: result\n    };\n  }).catch(function (error) {\n    error.message = 'Failed to get cards for list ' + props.listName + ': ' + error.message;\n    throw new errors.TrelloGetError(error);\n  });\n}, // Put everything into state:\nfunction (_ref4) {\n  var props = _ref4.props,\n      store = _ref4.store,\n      get = _ref4.get;\n  store.set(state(_templateObject3(), props.key), {\n    id: props.list.id,\n    name: props.list.name,\n    cards: props.cards,\n    board: props.board,\n    labels: props.labels\n  });\n}]); // All this does is refresh the card object in-place.  It does not check that\n// it is still in the same board.\n\nexport var reloadOneCard = sequence('trello.reloadOneCard', [function (_ref5) {\n  var trello = _ref5.trello,\n      props = _ref5.props,\n      store = _ref5.store,\n      get = _ref5.get;\n  if (!props.id) return;\n  return trello.get(\"cards/\".concat(props.id), {\n    fields: CARD_FIELDS\n  }).then(function (card) {\n    // Find the original place in Trello part of the state:\n    var lists = get(state(_templateObject4()));\n\n    var list = _.find(lists, function (list, listname) {\n      return list.id === card.idList;\n    });\n\n    var statePath = \"trello.lists.\".concat(list.name.toLowerCase(), \".cards.\").concat(card.id); // Now change it in the state:\n\n    card.statePath = statePath;\n    store.set(state(_templateObject5(), statePath), card);\n    return {\n      card: card\n    };\n  });\n}]); // props.card = {\n//   id: 'only use if this card already exists',\n//   name: 'the name to put',\n//   idList: 'id of list for card, required no matter what',\n// }\n\nexport var putCard = sequence('trello.putCard', [function (_ref6) {\n  var trello = _ref6.trello,\n      props = _ref6.props;\n  return Promise.try(function () {\n    var url = 'cards/';\n\n    if (!props.card.id) {\n      // card does not exist, do a post\n      return trello.post(url, {\n        name: props.card.name,\n        idList: props.card.idList\n      });\n    }\n\n    url += props.card.id + '/'; // card already exists, do a put to that card\n\n    return trello.put(url, {\n      name: props.card.name,\n      idList: props.card.idList\n    });\n  }).catch(function (err) {\n    throw new errors.TrelloSaveError('Failed to save to card', err);\n  });\n}, reloadOneCard]); // props.id, props.idLabel\n\nexport var addLabelToCard = sequence('trello.addLabelToCard', [function (_ref7) {\n  var trello = _ref7.trello,\n      props = _ref7.props;\n  trello.post(\"cards/\".concat(props.card.id, \"/idLabels\"), {\n    value: props.idLabel\n  });\n}, // Get the board name that goes with this card\nreloadOneCard]);","import _taggedTemplateLiteral from \"/Users/aultac/repos/aultfarms/dead/apps/dead/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"treatments.treatmentCodes\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"treatments.colors\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"treatments.tagIndex\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"treatments.records\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"incoming.records\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"treatments.records\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"trello.lists.treatments.id\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"treatments.records\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport moment from 'moment';\nimport _ from 'lodash';\nimport { set } from 'cerebral/operators';\nimport { state, sequence, CerebralError } from 'cerebral';\nimport { tagStrToObj, tagObjToStr, groupForTag } from '../../util/tagHelpers';\nimport * as trello from '../../trello/module/sequences'; //---------------------------------------------------------------\n// save one treatment\n\nexport var saveTreatment = [// find existing card that matches this date and treatment (if it exists):\nfunction (_ref) {\n  var props = _ref.props,\n      store = _ref.store,\n      get = _ref.get;\n  var ret = false;\n  var records = get(state(_templateObject()));\n\n  var existing = _.find(records, function (r) {\n    return r.date === props.record.date && r.treatment === props.record.treatment;\n  });\n\n  if (!existing) {\n    ret = _.cloneDeep(props.record);\n    ret.tags = [ret.tag];\n    return {\n      record: ret\n    }; // existing record is fine as-is in props, just needed array of tags instead of just one\n  } // Otherwise, check if this tag is already in the list:\n\n\n  var alreadyInList = _.find(existing.tags, function (t) {\n    return props.record.tag.color === t.color && props.record.tag.number === t.number;\n  });\n\n  if (alreadyInList) return {\n    record: existing\n  }; // replace record in props with existing record\n  // Otherwise, add record to the list of existing tags since it's not already there\n\n  ret = _.cloneDeep(existing);\n  ret.tags.push(props.record.tag); // replace record in props with this new one:\n\n  return {\n    record: ret\n  };\n}, // convert record to card\nfunction (_ref2) {\n  var props = _ref2.props,\n      store = _ref2.store,\n      get = _ref2.get;\n  return {\n    card: {\n      id: props.record.id,\n      idList: props.record.idList || get(state(_templateObject2())),\n      name: props.record.date + ': ' + props.record.treatment + ': ' + _.join(_.map(props.record.tags, function (t) {\n        return t.color + t.number;\n      }), ' ')\n    }\n  };\n}, // Put the card to trello:\ntrello.putCard]; //---------------------------------------------------------------------\n// fetch all treatment records:\n\nvar treatmentCardToRecord = function treatmentCardToRecord(c) {\n  if (!c) return null;\n  var name = c.name;\n  var datematches = name.match(/^([0-9]{4}-[0-9]{2}-[0-9]{2}):(.*)$/);\n  if (!datematches || datematches.length < 3) return null;\n  var date = datematches[1].trim();\n  var rest = datematches[2].trim();\n  var treatmentmatches = rest.match(/^(.+):(.*)$/);\n  if (!treatmentmatches || treatmentmatches.length < 3) return null;\n  var treatment = treatmentmatches[1].trim();\n  rest = treatmentmatches[2].trim();\n\n  var tags = _.map(_.split(rest, ' '), tagStrToObj);\n\n  return {\n    date: date,\n    treatment: treatment,\n    tags: tags,\n    id: c.id,\n    idList: c.idList,\n    cardName: c.name,\n    dateLastActivity: c.dateLastActivity\n  };\n};\n\nexport var fetch = sequence('treatments.fetch', [// get the cards\nfunction () {\n  return {\n    boardName: 'Livestock',\n    listName: 'Treatments',\n    key: 'treatments'\n  };\n}, trello.loadList, // convert all props.cards to records:\nfunction (_ref3) {\n  var props = _ref3.props,\n      store = _ref3.store;\n  return store.set(state(_templateObject3()), _.map(props.cards, treatmentCardToRecord));\n}, // compute the tagIndex as { <tag>: { <groupname>: { group: {}, treatments: [ ] } }\nfunction (_ref4) {\n  var props = _ref4.props,\n      get = _ref4.get,\n      store = _ref4.store;\n  var incoming = get(state(_templateObject4()));\n  var records = get(state(_templateObject5()));\n\n  var tagIndex = _.reduce(records, function (acc, r) {\n    if (!r.tags) return acc;\n\n    _.each(r.tags, function (t) {\n      var str = tagObjToStr(t);\n      var g = groupForTag(incoming, t, r.date);\n      if (!g) g = {\n        groupname: \"NONE\"\n      }; // early tags have no group\n\n      if (!acc[str]) acc[str] = {};\n      if (!acc[str][g.groupname]) acc[str][g.groupname] = {\n        group: g,\n        treatments: []\n      };\n      acc[str][g.groupname].treatments.push({\n        date: r.date,\n        treatment: r.treatment\n      });\n    });\n\n    return acc;\n  }, {});\n\n  store.set(state(_templateObject6()), tagIndex);\n}]); //---------------------------------------------------------------------\n// fetch the config cards (colors, treatmentCodes)\n\nvar colorsCardToRecord = function colorsCardToRecord(c) {\n  return c ? JSON.parse(c.desc) : null;\n};\n\nvar codesCardToRecord = function codesCardToRecord(c) {\n  return c ? JSON.parse(c.desc) : null;\n};\n\nexport var fetchConfig = sequence('treatments.fetchConfig', [function () {\n  return {\n    boardName: 'Livestock',\n    listName: 'Config',\n    key: 'livestockConfig'\n  };\n}, // get the colors and codes cards:\ntrello.loadList, // save colors in state:\nsequence('saveColors', [function (_ref5) {\n  var props = _ref5.props,\n      store = _ref5.store;\n  return store.set(state(_templateObject7()), colorsCardToRecord(_.find(props.cards, function (c) {\n    return c.name === 'Tag Colors';\n  })));\n}]), // save treatment codes in state:\nsequence('saveCodes', [function (_ref6) {\n  var props = _ref6.props,\n      store = _ref6.store;\n  return store.set(state(_templateObject8()), codesCardToRecord(_.find(props.cards, function (c) {\n    return c.name === 'Treatment Types';\n  })));\n}])]);","import * as sequences from './sequences';\nexport default {\n  sequences: sequences,\n  state: {\n    treatmentCodes: [{\n      \"code\": \"Z\",\n      \"name\": \"Zuprevo\"\n    }, {\n      \"code\": \"Za\",\n      \"name\": \"Zactran\"\n    }, {\n      \"code\": \"Dr\",\n      \"name\": \"Draxxin\"\n    }, {\n      \"code\": \"N\",\n      \"name\": \"Nuflor\"\n    }, {\n      \"code\": \"No\",\n      \"name\": \"Noromycin\"\n    }, {\n      \"code\": \"P\",\n      \"name\": \"Pennicillin\"\n    }, {\n      \"code\": \"Px\",\n      \"name\": \"Polyflex\"\n    }, {\n      \"code\": \"By\",\n      \"name\": \"Baytril\"\n    }, {\n      \"code\": \"Ex\",\n      \"name\": \"Excenel\"\n    }, {\n      \"code\": \"S\",\n      \"name\": \"Sulfa\"\n    }, {\n      \"code\": \"D\",\n      \"name\": \"Dex\"\n    }, {\n      \"code\": \"E\",\n      \"name\": \"Electrolytes\"\n    }, {\n      \"code\": \"Ht\",\n      \"name\": \"High Temp\"\n    }, {\n      \"code\": \"Lt\",\n      \"name\": \"Low Temp\"\n    }, {\n      \"code\": \"Nt\",\n      \"name\": \"No Temp\"\n    }],\n    colors: {\n      \"ORANGE\": \"#FF9900\",\n      \"YELLOW\": \"#E9E602\",\n      \"MARTYELL\": \"#FF00FF\",\n      \"BLACK\": \"#000000\",\n      \"RED\": \"#FF0000\",\n      \"WHITE\": \"#FFFFFF\"\n    },\n    records: [// {\n      //   date: 2018-03-17,\n      //   treatment: 'DrExHt',\n      //   tags: [\n      //     { number: 123, color: 'ORANGE' }\n      //   ]\n      // },\n    ]\n  }\n};","import _taggedTemplateLiteral from \"/Users/aultac/repos/aultfarms/dead/apps/dead/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/Users/aultac/repos/aultfarms/dead/apps/dead/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"incoming.records.\", \".dead\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"incoming.records\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"dead.records\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"incoming.records\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport _ from 'lodash';\nimport { set } from 'cerebral/factories';\nimport { sequence, state, CerebralError } from 'cerebral';\nimport { tagStrToObj, groupForTag\n/*rangeContainsTag*/\n} from '../../util/tagHelpers';\nimport * as trello from '../../trello/module/sequences'; //---------------------------------------------------------------------\n// fetch all incoming records:\n\nvar incomingCardToRecord = function incomingCardToRecord(c) {\n  if (!c) return null;\n  var name = c.name;\n  var matches = name.match(/^([0-9]{4}-[0-9]{2}-[0-9]{2}):? *([^;]+);(.*)$/);\n  var ret = {};\n  ret.date = matches[1];\n  ret.groupname = matches[2];\n  var rest = matches[3];\n  var parts = rest.split(';');\n\n  _.each(parts, function (p) {\n    var _p$trim$split = p.trim().split(':'),\n        _p$trim$split2 = _slicedToArray(_p$trim$split, 2),\n        propname = _p$trim$split2[0],\n        propval = _p$trim$split2[1];\n\n    ret[propname.toLowerCase().trim()] = propval.trim();\n  }); // If there are tag range(s), parse that out as well\n\n\n  if (ret.tags) {\n    ret.tags = ret.tags.replace(/ /g, ''); // get rid of any spaces\n\n    ret.tag_ranges = _.reduce(ret.tags.split(','), function (acc, r) {\n      // each range turns into 1 or 2 objects depending on color split\n      var _$map = _.map(r.split('-'), tagStrToObj),\n          _$map2 = _slicedToArray(_$map, 2),\n          start = _$map2[0],\n          end = _$map2[1]; // map start and end into objects\n\n\n      if (start.color !== end.color) {\n        acc.push({\n          start: start,\n          end: {\n            color: start.color,\n            number: 1000\n          }\n        });\n        acc.push({\n          start: {\n            color: end.color,\n            number: 1\n          },\n          end: end\n        });\n        return acc;\n      }\n\n      acc.push({\n        start: start,\n        end: end\n      });\n      return acc;\n    }, []);\n  }\n\n  ret.id = c.id;\n  ret.idList = c.idList;\n  ret.cardName = c.name;\n  ret.dateLastActivity = c.dateLastActivity;\n  return ret;\n};\n\nexport var fetch = sequence('incoming.fetch', [function () {\n  return {\n    boardName: 'Livestock',\n    listName: 'Incoming',\n    key: 'incoming'\n  };\n}, // get the cards\ntrello.loadList, // convert all props.cards to records:\nfunction (_ref) {\n  var props = _ref.props,\n      store = _ref.store;\n  return store.set(state(_templateObject()), _.map(props.cards, incomingCardToRecord));\n}]);\nexport var computeStats = sequence('incoming.computeStats', [function (_ref2) {\n  var get = _ref2.get,\n      store = _ref2.store;\n  // check if we have both dead and incoming records:\n  var deadrecords = get(state(_templateObject2()));\n  var incoming = get(state(_templateObject3())); // group all deads into the appropriate incoming group, keyed by groupname\n\n  var groupdeads = _.reduce(deadrecords, function (acc, d) {\n    if (!d.tags) console.log('incoming.computeStats: WARNING: dead record has no tags.  Card name = ', d.cardName);\n\n    _.each(d.tags, function (t) {\n      var g = groupForTag(incoming, t, d.date);\n      if (!g) return; // this is likely an old tag that has no known group, or a notag\n\n      if (!acc[g.groupname]) acc[g.groupname] = [];\n      acc[g.groupname].push({\n        date: d.date,\n        tag: t\n      });\n    });\n\n    return acc;\n  }, {}); // walk through all incoming records and add a \"dead\" key with the list of dead\n\n\n  _.each(incoming, function (g, index) {\n    store.set(state(_templateObject4(), index), groupdeads[g.groupname] || []);\n  });\n}]);","import * as sequences from './sequences';\nexport default {\n  sequences: sequences,\n  state: {\n    records: [// {\n      //   date: 2018-03-17,\n      //   groupname: 'MICH:MAR18-1',\n      //   weight: '274.35',\n      //   head: 250,\n      //   tags: [ \n      //     { \n      //       start: { number: 123, color: 'ORANGE' }, // NOTE: a color split will\n      //       end: { number: 372, color: 'ORANGE' },   // show up as multiple ranges\n      //     },\n      //   ],\n      //   id: 'kf2jlk', // ID of card\n      //   idList: '29ifjkl', // ID of Incoming list in Trello\n      //   cardName: '2018-03-17: MICH:MAR18-1; Head: 250; Weight: 274.35; Tags: ORANGE123-ORANGE372;',\n      // },\n    ]\n  }\n};","import _taggedTemplateLiteral from \"/Users/aultac/repos/aultfarms/dead/apps/dead/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject13() {\n  var data = _taggedTemplateLiteral([\"trello.lists.dead.id\"]);\n\n  _templateObject13 = function _templateObject13() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject12() {\n  var data = _taggedTemplateLiteral([\"dead.records\"]);\n\n  _templateObject12 = function _templateObject12() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject11() {\n  var data = _taggedTemplateLiteral([\"dead.records\"]);\n\n  _templateObject11 = function _templateObject11() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteral([\"dead.tagIndex.\", \"\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"dead.tagIndex.\", \"\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"incoming\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"dead.records\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"dead.records.\", \"\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"dead.records\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"dead.tagIndex\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"incoming.records\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"dead.errors\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"dead.records\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport moment from 'moment';\nimport _ from 'lodash';\nimport { set } from 'cerebral/factories';\nimport { state, sequence, CerebralError } from 'cerebral';\nimport { tagStrToObj, tagObjToStr, groupForTag } from '../../util/tagHelpers';\nimport * as trello from '../../trello/module/sequences'; //---------------------------------------------------------------------\n// fetch all dead records:\n\nvar deadCardToRecord = function deadCardToRecord(c) {\n  try {\n    if (!c) return null;\n    var name = c.name;\n    var matches = name.match(/^([0-9]{4}-[0-9]{1,2}-[0-9]{1,2}):?(.*)$/);\n    var day = matches[1];\n    var tags_and_pens_str = matches[2]; // Save the note if there is one:\n\n    matches = tags_and_pens_str.match(/[Nn][Oo][Tt][Ee]:(.*)$/);\n    var note = false;\n    if (matches) note = matches[1]; // Ditch anything in parentheses:\n\n    tags_and_pens_str = tags_and_pens_str.replace(/\\(.*\\)/g, ''); //    let tags_and_pens = tags_and_pens_str.match(/([A-Za-z']+ ?([0-9]+)?)/g);\n\n    var tags_and_pens = tags_and_pens_str.match(/(([A-Z]+:[A-Z]{3}[0-9]{2}-[A-Z0-9]:)?[A-Za-z']+ ?([0-9]+)?)/g);\n    tags_and_pens = _.map(tags_and_pens, function (tp) {\n      return tp.trim();\n    });\n    tags_and_pens = _.map(tags_and_pens, function (tp) {\n      return tp === 'NT' ? 'NOTAG1' : tp;\n    }); // eliminate everything that isn't just tags\n\n    var tags = _.filter(tags_and_pens, function (t) {\n      return !t.match(/^[NSB][0-9S]{1,2}$/i) && // N1, NS, S1, B3\n      !t.match(/^OB[SN]?[NS]?$/) && // OBS, OBN, OB, OBNS\n      !t.match(/^HB$/i) && !t.match(/^HEIFER$/i) && !t.match(/^DRY( ?(LOT|COW))?$/i) && !t.match(/^DAIRY$/i) && !t.match(/^APRIL'?S?$/i) && !t.match(/^WOODS$/i) && !t.match(/^BARN ?[1-3]$/i) && !t.match(/^dead/i) && !t.match(/^total/i) && !t.match(/^and/i);\n    }); // fixup bad tags:\n\n\n    tags = _.map(tags, function (t) {\n      return t.toUpperCase().replace(/ /g, '');\n    });\n    tags = _.map(tags, function (t) {\n      return t === 'NOTAG' ? 'NOTAG1' : t;\n    }); // parse all the tag strings into tag objects\n\n    tags = _.map(tags, tagStrToObj);\n    return {\n      date: day,\n      tags: tags,\n      note: note,\n      id: c.id,\n      idList: c.idList,\n      cardName: c.name,\n      dateLastActivity: c.dateLastActivity\n    }; // If anything goes wrong, just put an error record here:\n  } catch (err) {\n    return {\n      cardName: c.name,\n      idList: c.idList,\n      id: c.id,\n      error: err.toString()\n    };\n  }\n};\n\nexport var fetch = sequence('dead.fetch', [function () {\n  return {\n    boardName: 'Livestock',\n    listName: 'Dead',\n    key: 'dead'\n  };\n}, // get the cards\ntrello.loadList, // convert all props.cards to records or errors:\nfunction (_ref) {\n  var props = _ref.props,\n      store = _ref.store,\n      get = _ref.get;\n\n  var _$reduce = _.reduce(props.cards, function (acc, c) {\n    var r = deadCardToRecord(_.cloneDeep(c));\n    if (r.error) acc.errors.push(r);else acc.records.push(r);\n    return acc;\n  }, {\n    errors: [],\n    records: []\n  }),\n      errors = _$reduce.errors,\n      records = _$reduce.records;\n\n  store.set(state(_templateObject()), records);\n  store.set(state(_templateObject2()), errors); // re-index all dead records as { tagstr: { groupname: date } }\n\n  var incoming = get(state(_templateObject3()));\n\n  var tagIndex = _.reduce(records, function (acc, r) {\n    if (!r.tags) return acc;\n\n    _.each(r.tags, function (t) {\n      var str = tagObjToStr(t);\n      var g = groupForTag(incoming, t, r.date);\n      if (!g) g = {\n        groupname: \"NONE\"\n      }; // early tags have no group\n\n      if (!acc[str]) acc[str] = {};\n      acc[str][g.groupname] = r.date;\n    });\n\n    return acc;\n  }, {});\n\n  store.set(state(_templateObject4()), tagIndex);\n}]);\nvar reloadOneRecord = sequence('dead.reloadOneRecord', [function (_ref2) {\n  var props = _ref2.props,\n      store = _ref2.store,\n      get = _ref2.get;\n  // re-process the card into a record, overwrite the previous record.  If it was\n  // a new card, it will get appended to the records list.\n  var records = get(state(_templateObject5()));\n\n  var recordIndex = _.findIndex(records, function (r) {\n    return r.id === props.card.id;\n  });\n\n  var refreshedRecord = deadCardToRecord(props.card);\n\n  if (recordIndex >= 0) {\n    // found it, replace it:\n    store.set(state(_templateObject6(), recordIndex), refreshedRecord);\n  } else {\n    // did not find it, push onto end:\n    store.push(state(_templateObject7()), refreshedRecord);\n  } // Update the tagindex if necessary\n\n\n  var incoming = get(state(_templateObject8()));\n\n  _.each(refreshedRecord.tags, function (t) {\n    var str = tagObjToStr(t);\n    var g = groupForTag(incoming, t, refreshedRecord.date);\n    if (!g) g = {\n      groupname: \"NONE\"\n    }; // early tags have no group\n\n    var previous = _.clone(get(state(_templateObject9(), str)));\n\n    var newone = _.clone(previous) || {};\n    newone[g.groupname] = refreshedRecord.date;\n    store.set(state(_templateObject10(), str), newone);\n  });\n\n  return {\n    record: refreshedRecord\n  };\n}]);\nexport var saveDead = sequence('dead.saveDead', [// Check if this tag is already in any of the days 14 before or after date\n// in order to prevent duplicates:\nfunction (_ref3) {\n  var props = _ref3.props,\n      store = _ref3.store,\n      get = _ref3.get;\n  var records = get(state(_templateObject11()));\n  var start = moment(props.record.date, 'YYYY-MM-DD').subtract(14, 'days');\n  var end = moment(props.record.date, 'YYYY-MM-DD').add(14, 'days');\n\n  var alreadyDead = _.find(records, function (r) {\n    var d = moment(r.date, 'YYYY-MM-DD'); // Not within date range?\n\n    if (!start.isBefore(d) || !end.isAfter(d)) return false; // Tag not already in list?\n\n    if (!_.find(r.tags, function (t) {\n      return t.color === props.record.tag.color && t.number === props.record.tag.number;\n    })) return false; // In date range and tag already in list\n\n    return true;\n  });\n\n  if (alreadyDead) {\n    return {\n      alreadyDead: true\n    };\n  }\n}, // Find existing card for this date if there is one\nfunction (_ref4) {\n  var props = _ref4.props,\n      store = _ref4.store,\n      get = _ref4.get;\n  if (props.alreadyDead) return;\n  var ret = false;\n  var records = get(state(_templateObject12()));\n\n  var existingDate = _.find(records, function (r) {\n    return r.date === props.record.date;\n  }); // If there isn't one, just update record to have \"tags\" as array rather than one tag\n\n\n  if (!existingDate) {\n    ret = _.cloneDeep(props.record);\n    ret.tags = [ret.tag];\n    return {\n      record: ret\n    };\n  } // Otherwise, there is an existing card for this date, add the tag to its list:\n\n\n  ret = _.cloneDeep(existingDate);\n  ret.tags.push(props.record.tag);\n  return {\n    record: ret\n  };\n}, // convert record to card\nfunction (_ref5) {\n  var props = _ref5.props,\n      store = _ref5.store,\n      get = _ref5.get;\n  var card = props.record.card || {};\n  card.id = props.record.id;\n  card.idList = props.record.idList || get(state(_templateObject13())), card.name = props.record.date + ': ' + _.join(_.map(props.record.tags, tagObjToStr), ' ') + (props.record.note ? 'Note: ' + props.record.note : '');\n  return {\n    card: card\n  };\n}, // Put the card to Trello, this reloads that one card into state from Trello afterward\ntrello.putCard, // Re-process the card into it's approriate record:\nreloadOneRecord]);","import * as sequences from './sequences';\nexport default {\n  sequences: sequences,\n  state: {\n    tagIndex: {},\n    records: [// {\n      //   date: 2018-03-17,\n      //   tags: [ { number: 123, color: 'ORANGE' }],\n      //   id: '02kjlwfj0f23',                // ID of the card\n      //   idList: '2fj0ijosdf',              // ID of the dead list\n      //   cardName: '2018-03-17: ORANGE123', // original card, for debugging\n      //   dateLastActivity: '2018-03-17',    // for sorting by \"recent\"-ness\n      // },\n    ]\n  }\n};","import * as sequences from './sequences';\nexport default {\n  sequences: sequences,\n  state: {\n    authorized: false,\n    lists: {// feed: {\n      //   name: 'Feed Delivered'\n      //   id: 'kdj20fi32jld',\n      //   cards: { ... },  // the regular trello list of cards\n      // }\n    }\n  }\n};","import _taggedTemplateLiteral from \"/Users/aultac/repos/aultfarms/dead/apps/dead/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"windowSize.isSmall\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"windowSize.isSmall\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"windowSize.orientation\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"windowSize.orientation\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { state, sequence } from 'cerebral';\nexport var resized = sequence('windowSize.resized', [function (_ref) {\n  var windowSize = _ref.windowSize,\n      props = _ref.props,\n      store = _ref.store,\n      get = _ref.get;\n\n  if (get(state(_templateObject())) !== windowSize.orientation()) {\n    store.set(state(_templateObject2()), windowSize.orientation());\n  }\n\n  var isSmall = windowSize.orientation() === 'portrait' ? props.width < 767 : props.height < 500;\n  if (get(state(_templateObject3())) !== isSmall) store.set(state(_templateObject4()), isSmall);\n}]);\nexport var init = sequence('windowSize.init', [function (_ref2) {\n  var windowSize = _ref2.windowSize;\n  return windowSize.init('windowSize.resized');\n}, // registers event listener for window resize events\nresized]);","import * as sequences from './sequences';\nexport default {\n  sequences: sequences,\n  state: {\n    isSmall: true,\n    // changes to true for mobile, false for computer\n    orientation: 'portrait' // portrait | landscape\n\n  }\n};","import _classCallCheck from \"/Users/aultac/repos/aultfarms/dead/apps/dead/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/aultac/repos/aultfarms/dead/apps/dead/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aultac/repos/aultfarms/dead/apps/dead/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/aultac/repos/aultfarms/dead/apps/dead/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { Provider, CerebralError } from 'cerebral';\nimport Promise from 'bluebird';\nexport var TrelloClientLoadError =\n/*#__PURE__*/\nfunction (_CerebralError) {\n  _inherits(TrelloClientLoadError, _CerebralError);\n\n  function TrelloClientLoadError() {\n    _classCallCheck(this, TrelloClientLoadError);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TrelloClientLoadError).apply(this, arguments));\n  }\n\n  return TrelloClientLoadError;\n}(CerebralError);\n; // dev key: 3ad06cb25802014a3f24f479e886771c\n// URL to refresh client lib: https://api.trello.com/1/client.js?key=3ad06cb25802014a3f24f479e886771c\n\nvar waitUntilLoaded = function waitUntilLoaded() {\n  return Promise.try(function () {\n    var count = 0;\n\n    var check = function check() {\n      if (window.Trello) return true;\n      if (count++ > 50) throw TrelloClientLoadError('Could not load Trello client library');\n      return Promise.delay(250).then(check);\n    };\n\n    return Promise.try(check);\n  });\n}; // Promisify the normal Trello client:\n\n\nexport default Provider({\n  //-------------------------------------------------\n  // call authorize first before any other functions in this provider:\n  authorize: function authorize() {\n    return waitUntilLoaded().then(function () {\n      return new Promise(function (resolve, reject) {\n        window.Trello.authorize({\n          type: 'redirect',\n          name: 'Ault Farms - Invoices',\n          persist: true,\n          scope: {\n            read: 'true',\n            write: 'true'\n          },\n          expiration: 'never',\n          success: resolve,\n          error: function error(err) {\n            console.log('Failed to authorize Trello: err = ', err);\n            reject(err);\n          }\n        });\n        return null;\n      });\n    });\n  },\n  deauthorize: function deauthorize() {\n    return new Promise(function (resolve, reject) {\n      window.Trello.deauthorize();\n      resolve();\n    });\n  },\n  get: function get(path, params) {\n    return new Promise(function (resolve, reject) {\n      return window.Trello.get(path, params || {}, resolve, function (err) {\n        console.log('Trello.get ERROR: ', err);\n        reject(err);\n      });\n    });\n  },\n  put: function put(path, params) {\n    return new Promise(function (resolve, reject) {\n      return window.Trello.put(path, params, resolve, function (err) {\n        console.log('Trello.put ERROR: ', err);\n        reject(err);\n      });\n    });\n  },\n  post: function post(path, params) {\n    return new Promise(function (resolve, reject) {\n      return window.Trello.post(path, params, resolve, function (err) {\n        console.log('Trello.post ERROR: ', err);\n        reject(err);\n      });\n    });\n  }\n});","import _taggedTemplateLiteral from \"/Users/aultac/repos/aultfarms/dead/apps/dead/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { sequences } from 'cerebral';\n\nvar _dimensions = function dimensions() {\n  return {\n    width: window.innerWidth,\n    height: window.innerHeight\n  };\n};\n\nvar seq = '';\nvar _M = {\n  dimensions: function dimensions() {\n    return _dimensions();\n  },\n  orientation: function orientation() {\n    var d = _dimensions();\n\n    return d.width > d.height ? 'landscape' : 'portrait';\n  },\n  windowResized: function windowResized() {\n    this.context.get(sequences(_templateObject(), seq))(_dimensions());\n  },\n  init: function init(sequencepath) {\n    seq = sequencepath;\n    window.addEventListener('resize', _M.windowResized.bind(this)); // compute it the first time:\n\n    this.context.get(sequences(_templateObject2(), sequencepath))(_dimensions());\n  }\n};\nexport default _M;","import _ from 'lodash';\nimport { set } from 'cerebral/operators';\nimport { state,props } from 'cerebral/tags';\nimport { sequence, parallel } from 'cerebral';\n\nimport * as treatments from 'aultfarms-lib/treatments/module/sequences';\nimport * as incoming   from 'aultfarms-lib/incoming/module/sequences';\nimport * as dead       from 'aultfarms-lib/dead/module/sequences';\nimport * as trello     from 'aultfarms-lib/trello/module/sequences';\nimport * as windowSize from 'aultfarms-lib/windowSize/module/sequences';\n\nimport { tagHelpers } from 'aultfarms-lib/util';\n\nexport const updateMsg = sequence('updateMsg', [\n  ({props,store,get}) => {\n    if (props.msg) return store.set(state`msg`, props.msg);\n    if (!get(state`trello.authorized`)) \n      return store.set(state`msg`, { type: 'bad', text: 'You are not logged in to Trello.' });\n    if (get(state`record.is_saved`)) \n      return store.set(state`msg`, { type: 'good', text: 'Dead record saved.'});\n    store.set(state`msg`, { type: 'bad', text: 'Dead record not saved'});\n  },\n]);\n\nexport const historySelectionChangeRequested = sequence('app.historySelectionChangeRequested', [ \n  set(state`historySelector.active`, props`active`), \n]);\nexport const historyGroupSortClicked = sequence('app.historyGroupSortClicked', [ \n  set(state`historyGroup.sort`, props`sort`) \n]);\n\nexport const changeRecord = sequence('app.changeRecord', [ \n  ({props,store,get}) => {\n    // Only the first time that the is_saved gets set to false, automatically\n    // switch the Date/Tag pane to Tag since we're typing a tag now.\n    // Different from Treatments app, just changing the date doesn't swap the view\n    if (get(state`record.is_saved`) && props.tag) store.set(state`historySelector.active`, 'tag');\n    // if they are changing a record that has already been saved, go ahead and clear out\n    // the date box for them\n    if (props.date) store.set(state`record.date`, props.date);\n    if (props.tag && typeof props.tag.color === 'string') {\n      store.set(state`record.tag.color`, props.tag.color);\n      if (props.tag.color === 'NOTAG') store.set(state`record.tag.number`,'1');\n    }\n    if (props.tag && (typeof props.tag.number === 'string' || typeof props.tag.number === 'number')) {\n      store.set(state`record.tag.number`, +(props.tag.number));\n    }\n    // Now, get the current tag from the state and compute the group:\n    if (props.tag) {\n      const g = tagHelpers.groupForTag(get(state`incoming.records`),get(state`record.tag`),get(state`record.date`));\n      const sg = get(state`record.group`);\n      // If there's anything different, change the state to the new group info\n      if (!(sg && g && sg.groupname === g.groupname)) store.set(state`record.group`,_.cloneDeep(g))\n    }\n\n    // if we changed the tag, then mark it as unsaved.  Otherwise, it was just the date\n    // and we don't want that to be equivalent to un-saving the tag.\n    if (props.tag) {\n      store.set(state`record.is_saved`, false);\n    }\n  },\n  updateMsg,\n]);\nexport const logout = sequence('app.logout', [ trello.deauthorize, trello.authorize]);\n\nexport const saveRecord = sequence('app.saveRecord', [ \n  set(props`record`, state`record`),\n  set(state`recordsValid`, false),\n  set(state`msg`, { type: 'good', text: 'Saving card...' }),\n  dead.saveDead, // saveDead now will update the single record in-place without fetching all\n  set(state`msg`, { type: 'good', text: 'Refreshing records...' }),\n//  dead.fetch,\n  set(state`recordsValid`, true),\n  set(state`record.is_saved`, true),\n  set(state`record.tag.number`, ''),\n  set(state`historySelector.active`, 'date'),\n  set(state`msg`, { type: 'good', text: 'Recomputing stats...' }),\n  incoming.computeStats,\n  updateMsg,\n]);\n\nexport const init = sequence('app.init', [\n  windowSize.init,\n  set(state`msg`, { type: 'good', text: 'Checking trello authorization...' }),\n  trello.authorize,\n  set(state`msg`, { type: 'good', text: 'Fetching records...' }),\n  // Get the groups first, because all the tags only make sense once you know the groups:\n  incoming.fetch,\n  parallel('app.init.parallel', [\n    treatments.fetch,\n    treatments.fetchConfig,\n    dead.fetch,\n  ]),\n  set(state`msg`, { type: 'good', text: 'Computing stats...' }),\n  incoming.computeStats,\n  set(state`recordsValid`, true),\n  set(state`msg`, { type: 'good', text: 'Loaded successfully.'}),\n]);\n","import moment from 'moment';\nimport { set } from 'cerebral/factories';\nimport { state } from 'cerebral/tags';\n\n\nimport treatmentsModule from 'aultfarms-lib/treatments/module';\nimport   incomingModule from 'aultfarms-lib/incoming/module';\nimport       deadModule from 'aultfarms-lib/dead/module';\nimport     trelloModule from 'aultfarms-lib/trello/module';\nimport windowSizeModule from 'aultfarms-lib/windowSize/module';\n\nimport     trelloProvider from 'aultfarms-lib/trello/provider';\nimport windowSizeProvider from 'aultfarms-lib/windowSize/provider';\n\nimport * as trelloErrors from 'aultfarms-lib/trello/module/errors';\n\nimport * as sequences from './sequences';\n\nexport default {\n  sequences,\n  state: { \n    recordsValid: false,\n    treatmentEditorActive: false,\n    historySelector: {\n      active: 'date', // date/tag/group/dead\n    },\n    historyGroup: {\n      sort: 'date', // date/name/dead/perc\n    },\n\n    msg: {\n      type: 'bad',\n      text: 'Treatment record not saved.',\n    },\n\n    record: {\n      group: {\n        /*date: '2019-09-12', // incoming date\n         *groupname: 'BKTKY:MAR19-C',\n         *...other group things...\n         */\n      },\n      date: moment().format('YYYY-MM-DD'),\n      tag: {\n        color: '',\n        number: 0,\n      },\n      is_saved: true,\n    },\n\n  },\n  modules: {\n    treatments: treatmentsModule,\n      incoming: incomingModule,\n          dead: deadModule,\n        trello: trelloModule,\n    windowSize: windowSizeModule,\n  },\n  providers: {\n        trello: trelloProvider,\n    windowSize: windowSizeProvider,\n  },\n  catch: [\n    [ trelloErrors.TrelloSaveError,      [ set(state`msg`, 'ERROR: failed to save in Trello')      ] ],\n    [ trelloErrors.TrelloGetError,       [ set(state`msg`, 'ERROR: failed to get in Trello')       ] ],\n    [ trelloErrors.TrelloAuthorizeError, [ set(state`msg`, 'ERROR: failed to authorize in Trello') ] ],\n  ],\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport registerServiceWorker from './registerServiceWorker';\n\nimport App from './App';\nimport AppModule from './module';\n\nimport CerebralApp from 'cerebral';\nimport { Container } from '@cerebral/react';\nimport devtools from 'cerebral/devtools';\n\nimport 'pure-css';\nimport './index.css';\n\nconst controller = CerebralApp(AppModule, {\n  devtools: process.env.NODE_ENV === 'production' ? null : devtools({host: 'localhost:8000', reconnect: true }),\n});\n\n\n// Render the root node:\nReactDOM.render(\n  <Container app={controller}>\n    <App />\n  </Container>, document.getElementById('root')\n);\n\nregisterServiceWorker();\n\n"],"sourceRoot":""}